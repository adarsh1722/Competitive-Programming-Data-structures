// stryker27

#include<bits/stdc++.h>
using namespace std;

#define  fi          first
#define  sc          second
#define  mp          make_pair
#define  pb          push_back
#define  int         long long int
#define  vi          vector<int>
#define  vpi         vector<pair<int,int>>

#define  For(b)     for(int i=0;i<b;i++)
#define  f(i,a,b)   for(int i=a;i<b;i++)
#define  fj(j,a,b)  for(int j=a;j<b;j++)

#define  nl          "\n"
#define  gr         greater<int>()
#define  all(x)     x.begin(),x.end()
#define  flash      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
const int mod  =    1000000007;

void print()  {    cout << endl;  }
void printarray()  {    return;  }
void scan() { return; }

template<typename T , typename... Args>  void print(T a , Args... arg)    {    cout << a << " " ;    print(arg...);    }

template<typename T , typename... Args> void scan(T &a , Args&... arg) {   cin >> a;   scan(arg...);   }

template<typename T, typename... Args> void scan(vector<T>&v , Args&... arg) {  for (auto &i : v)  cin >> i;  scan(arg...);  }

template<typename T, typename... Args> void printarray(vector<T>&v, Args&... arg) {   for (auto i : v)     cout << i << " ";   cout << endl;    printarray(arg...);    }

int mxN=100005;
vector<int>adj[100001];

void addEdge(int a,int b)
{
   adj[a].pb(b);
   adj[b].pb(a);

}

void printGraph(int N)
{
    for(int i=1;i<=N;i++)
    {
        cout << "\n Adjacency list of vertex "
             << i << "\n head ";
        for(auto x:adj[i])
        {
            cout << "->"<<x;
        }
        cout << nl;
    }
}


int32_t main() {

    flash;

    int N;
    print("Enter number of Nodes =>");
    cin >> N;

    while(1)
    {
        print("Enter edges of graph");
        int a,b;
        cin >> a  >> b;
        addEdge(a,b);

        int x;
        print("press 0 to continue and 1 to exit :");
        cin >> x;
        if(x==1)
        {
            break;
        }

    }

    printGraph(N);



    return 0;
}


